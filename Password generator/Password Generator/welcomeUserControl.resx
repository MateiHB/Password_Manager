<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aHFgaCGczv8BKA48rQbQqscAAAAASUVORK5CYII=
</value>
  </data>
</root>